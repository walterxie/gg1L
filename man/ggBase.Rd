% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gg1LBase.R
\name{ggBase}
\alias{ggBase}
\alias{ggInit}
\alias{ggLabTitle}
\alias{ggOptCoordCartesian}
\alias{ggThemeOthers}
\alias{ggThemePanelBorder}
\title{Basic functions to make up one-line functions}
\usage{
ggInit(df, x.id, y.id = NULL, fill.id = NULL, group.id = NULL,
  colour.id = NULL, verbose = TRUE)

ggOptCoordCartesian(p, df, x.id, y.id, x.lim.cart = NULL, y.lim.cart = NULL,
  coord.flip = FALSE, verbose = TRUE)

ggLabTitle(p, title, x.lab = NULL, y.lab = NULL)

ggThemePanelBorder(p, title.size = 10)

ggThemeOthers(p, x.text = TRUE, y.text = TRUE, x.ticks = TRUE,
  y.ticks = TRUE, x.text.angle = 0, plot.margin.cm = NULL,
  title.hjust = 0.5, legend.position = "right",
  legend.direction = "vertical", verbose = TRUE)
}
\arguments{
\item{df}{A data frame used for plot.}

\item{x.id, y.id, fill.id, group.id, colour.id}{The string of column names in \code{df},
which is corresponding to \code{x, y, fill, group, colour}
in the aesthetic mapping \code{\link{aes}}.}

\item{verbose}{More messages. Default to TRUE.}

\item{p}{The ggplot object.}

\item{x.lim.cart, y.lim.cart}{Setting limits on the coordinate system will zoom the plot,
and will not change the underlying data like setting limits on a scale will.
Refer to \code{\link{coord_cartesian}}.
Set lower bound only to y-axis using y.lim.cart=c(1000,NA). Default NULL.}

\item{coord.flip}{If TRUE, then flip cartesian coordinates so that horizontal
becomes vertical, and vertical becomes horizontal. Default to FALSE. Refer to
\code{\link{coord_flip}}.}

\item{title}{Graph title, set title="" to remove it from the plot.}

\item{x.lab, y.lab}{The label of x-axis or y-axis, such as plot names.
Set x.lab="" to remove x-axis label from the plot. Default to NULL to do nothing.}

\item{title.size}{Graph title font size.}

\item{x.text, y.text}{If FALSE, hide tick labels
along x-axis or y-axis in plot. Default to TRUE.}

\item{x.ticks, y.ticks}{If FALSE, hide tick marks
along x-axis or y-axis in plot. Default to TRUE.}

\item{x.text.angle}{The angle to rotate tick labels along x-axis.}

\item{plot.margin.cm}{margin around entire plot in a 4-element vector
(the sizes of the top, right, bottom, and left margins in cm),
such as \code{c(1,2,3,4)}.}

\item{title.hjust}{Numeric, adjust title position, default to 0.5 (middle),
0 is left and 1 right.}

\item{legend.position}{Legend position, default to "right".}

\item{legend.direction}{The direction to display legend, default to "vertical".}
}
\value{
A \code{\link{ggplot}} object, which can be concatenated using '+'.
}
\description{
Start to simplify \pkg{ggplot} graphic coding into these basic functions first,
and reuse them to make up other one-line plot functions.
}
\details{
\code{ggInit} initialises the plot, and define the aesthetic mapping.
\code{df} and \code{x.id} are compulsory.

\code{ggOptCoordCartesian} can set limits on the coordinate system to zoom the plot,
but this will not change the underlying data like setting limits on a scale will.
It is also used to flip the coordinate system.

\code{ggLabTitle} changes the title of graph, and the label on x or y-axis.

\code{ggThemePanelBorder} uses \code{\link{theme}} to modify individual
components in the panel of a theme, such as grid, background, border, etc.

\code{ggThemeOthers} uses \code{\link{theme}} to modify the rest
components of a theme, such as ticks, margin, title, ledgend, etc.
}
\examples{
data(model.test)
p <- ggInit(model.test, x.id="test", y.id="performance", fill.id="model")

p <- ggOptCoordCartesian(p, model.test, x.id="test", y.id="performance", coord.flip=T)

p <- ggLabTitle(p, title="", x.lab="test", y.lab="performance score")

}
\references{
More details and tutorials are available at
\url{https://github.com/walterxie/gg1L}
}
\seealso{
Colour schemes \code{\link{ggOptPalette}};
position scales \code{ggOptScaleAxis}.
}
\keyword{base}

