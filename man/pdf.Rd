% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GraphUtils.R
\name{pdf}
\alias{grid_arrange_shared_legend}
\alias{pdf}
\alias{pdf.ggplot}
\alias{pdf.gtable}
\alias{pdf.plot}
\alias{plot.gtable}
\alias{unclip.ggplot}
\title{Create pdf}
\usage{
pdf.ggplot(gg.plot, fig.path, width = 6, height = 6, useDingbats = TRUE)

pdf.gtable(g.table, fig.path, width = 6, height = 6, useDingbats = TRUE)

pdf.plot(plot, fig.path, width = 6, height = 6, useDingbats = TRUE)

\method{plot}{gtable}(g.table)

unclip.ggplot(gg.plot)

grid_arrange_shared_legend(..., input.list = FALSE,
  legend.position = "bottom", ncol = 2, nrow = 2, widths = c(1, 0.1),
  unclip.ggplot = TRUE)
}
\arguments{
\item{gg.plot}{A \code{\link{ggplot}} object.}

\item{fig.path}{fig.path The full path of pdf file.}

\item{width, }{height Refer to \code{\link{pdf}}. Default to width=6, height=6.}

\item{useDingbats}{Defaults to TRUE, which produces smaller and better output. 
Setting this to FALSE can work around font display problems in broken PDF viewers.
Refer to \code{\link{pdf}}.}

\item{plot}{The list returned from \code{\link{plot}}.}

\item{...}{The list of \code{\link{ggplot}} objects.}

\item{input.list}{Default to FALSE to unwrap list(...) to 
get the actual list if the input is a list of plots}

\item{legend.position}{The position of legends 
("none", "left", "right", "bottom", "top", or two-element numeric vector)}

\item{ncol, nrow}{Specify the grid.}

\item{widths}{A unit vector giving the width of each column in \code{\link{gtable}}. 
\code{length(widths) == ncol}, for example, widths=c(1, 0.1, 0.1) for 3 columns.}

\item{gtable}{A \code{\link{gtable}} object.}
}
\details{
\code{pdf.ggplot} creates pdf for ggplot object.

\code{pdf.gtable} creates pdf for gtable object.

\code{pdf.plot} creates pdf for the list returned from \code{\link{plot}}.
Tip: use \code{\link{"\%<a-\%"}} in \pkg{pryr} to save plots.

\code{plot.gtable} \code{\link{require}(\link{grid})} 
and plot gtable object in console.

\code{unclip.ggplot} turns off clipping for a 
\code{\link{ggplot}} object, but returns a 
\code{\link{gtable}} object. 
Refer to \url{http://stackoverflow.com/questions/9690648/point-clipped-on-x-axis-in-ggplot}.

\code{grid_arrange_shared_legend} shares a legend 
between multiple plots using \code{\link{grid.arrange}}. 
Return a \code{\link{gtable}} object.

Modified from  
\url{http://rpubs.com/sjackman/grid_arrange_shared_legend}.
}
\examples{
pdf.ggplot(gg.plot, fig.path="fig.pdf", width=8, height=8)  

pdf.gtable(g.table, fig.path="fig.pdf", width=8, height=8)  

pdf.plot(plot, fig.path="fig.pdf", width=8, height=8)  

plot(g.table)  

gt <- unclip.ggplot(gg.plot)  

library(ggplot2); library(grid); library(gridExtra)
dsamp <- diamonds[sample(nrow(diamonds), 1000), ]
p1 <- qplot(carat, price, data=dsamp, colour=clarity)
p2 <- qplot(cut, price, data=dsamp, colour=clarity)
p3 <- qplot(color, price, data=dsamp, colour=clarity)
p4 <- qplot(depth, price, data=dsamp, colour=clarity)
grid_arrange_shared_legend(p1, p2, p3, p4)

grid_arrange_shared_legend(list(p1, p2, p3, p4), input.list=T)

}
\keyword{graph}

